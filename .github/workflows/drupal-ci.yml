name: Drupal Deploy

on: [ push ]

env:
  THEME_DIR: web/themes/custom/gt_honors
  BLT: ./vendor/bin/blt
  BLT_DIR: ./vendor/acquia/blt
  DRUPAL_CI_DIR: ./vendor/evolvingweb/drupal-ci
  DEPLOYMENT_REMOTE: 'git@it.github.gatech.edu:honors-program/gt-honors-artifact.git'

jobs:
  build:
    container: evolvingweb/drupal-fpm:ci-8.1
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        known_hosts: ${{ secrets.DEPLOY_KNOWN_HOSTS }} 

    - name: Before build
      run: |
        composer config -g cache-dir "$(pwd)/.composer-cache"
        composer self-update --2
        composer validate --no-check-all --ansi
        composer install

    - name: Source Build
      run: |
        CI_PROJECT_DIR="$(pwd)"
        curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
        [ -s "$HOME/.nvm/nvm.sh" ] && \. "$HOME/.nvm/nvm.sh"        
        cd $THEME_DIR 
        nvm install
        cd $CI_PROJECT_DIR 
        $BLT validate
        $BLT source:build --ansi --verbose --no-interaction

  deploy:
    container: evolvingweb/drupal-fpm:ci-8.1
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - uses: actions/checkout@v3

    - uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        known_hosts: ${{ secrets.DEPLOY_KNOWN_HOSTS }} 

    - name: Before build
      run: |
        composer config -g cache-dir "$(pwd)/.composer-cache"
        composer self-update --2
        composer validate --no-check-all --ansi
        composer install

    - name: Artifact Deploy
      run: |
        CI_PROJECT_DIR="$(pwd)"
        curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
        [ -s "$HOME/.nvm/nvm.sh" ] && \. "$HOME/.nvm/nvm.sh"        
        cd $THEME_DIR 
        nvm install
        cd $CI_PROJECT_DIR 
        GIT_COMMIT_MESSAGE="Automated commit by Drupal CI (${{ github.ref_name }} - ${{ github.sha }})"
        $BLT artifact:deploy -D git.remotes.0="$DEPLOYMENT_REMOTE" --commit-msg "$GIT_COMMIT_MESSAGE" --branch "${{ github.ref_name }}" --ignore-dirty --no-interaction --verbose
